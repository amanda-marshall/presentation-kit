# Return minimum
sub
  int min(int a, int b)
begin
  int out;
  if a < b then out = a; else out = b; end;
  return out;
end;

# Return maximum
sub
  int max(int a, int b)
begin
  int out;
  if a > b then out = a; else out = b; end;
  return out;
end;

# Staircase algorithm
sub
  staircase(
    int& referenceValue,
    int minimum,
    int maximum,
    int increment,
    bool shouldIncrease
  )
begin
  if shouldIncrease then
    referenceValue = min(referenceValue + increment, maximum);
  else
    referenceValue = max(referenceValue - increment, minimum);
  end;
end;

# Returns a random index between 1 and `count`
sub int randomIndex(int count) begin
  if count < 1 then
    exit("Count cannot be negative");
  end;
  return random(1, count);
end;

# Returns a random index between 1 and `count` and is non-repeating
int refRandomIndexLast = -1;
sub
  int randomNonRepeatingIndex(int count)
begin
  if count < 1 then
    exit("Count cannot be negative");
  end;
  int newIndex = refRandomIndexLast;
  loop until refRandomIndexLast != newIndex begin
    newIndex = random(1, count);
  end;
  return newIndex;
end;
